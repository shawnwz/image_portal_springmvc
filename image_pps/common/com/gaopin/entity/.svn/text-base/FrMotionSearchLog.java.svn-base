package com.gaopin.entity;

// Generated May 25, 2015 8:53:49 AM by Hibernate Tools 3.4.0.CR1

import java.net.URLDecoder;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import com.gaopin.utils.JsonFormat;

/**
 * FrMotionSearchLog generated by hbm2java
 */
@Entity
@Table(name = "fr_motion_search_log", catalog = "gaopin_images")
public class FrMotionSearchLog implements java.io.Serializable {

	private Long id;
	private Integer userId;
	private String searchKey;
	private String searchData;
	private Date createTime;

	private Map<String, Object> map = new HashMap<String, Object>();
	
	public FrMotionSearchLog() {
	}

	public FrMotionSearchLog(Integer userId, String searchKey,
			String searchData, Date createTime) {
		this.userId = userId;
		this.searchKey = searchKey;
		this.searchData = searchData;
		this.createTime = createTime;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@Column(name = "user_id")
	public Integer getUserId() {
		return this.userId;
	}

	public void setUserId(Integer userId) {
		this.userId = userId;
	}

	@Column(name = "search_key", length = 2000)
	public String getSearchKey() {
		return this.searchKey;
	}

	public void setSearchKey(String searchKey) {
		this.searchKey = searchKey;
	}

	@Column(name = "search_data", length = 16777215)
	public String getSearchData() {
		return this.searchData;
	}

	public void setSearchData(String searchData) {
		this.searchData = searchData;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "create_time", length = 19)
	public Date getCreateTime() {
		return this.createTime;
	}

	public void setCreateTime(Date createTime) {
		this.createTime = createTime;
	}
	
	@Transient
	public void addData(String key, Object value){
		map.put(key, value);
	}
	
	@Transient
	public void addData(Map<String, Object> map){
		this.map.putAll(map);
	}
	
	@Transient
	public void setData(){
		if(map!=null && map.size()>0){
			try{
				if(map.containsKey("search_words")){
					map.put("search_words", URLDecoder.decode((String)map.get("search_words"), "UTF-8"));
				}
				if(map.containsKey("fq")){
					map.put("fq", URLDecoder.decode((String)map.get("fq"), "UTF-8"));
				}
			}catch (Exception e) {
			}
			setSearchData(JsonFormat.toString(map));
		}
	}

}
